# Docker Profile Configuration
spring.application.name=Portfolio

# Database Configuration for Docker
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://mysql:3306/portfolio?useSSL=false&allowPublicKeyRetrieval=true}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:portfolio_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:portfolio_password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.open-in-view=false

# Server Configuration
server.port=9000

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging Configuration
logging.level.org.springframework=INFO
logging.level.com.karan.Portfolio=INFO

# Static Resources Configuration
spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/**

# CORS Configuration
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*

# SQL Initialization
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# Actuator Configuration for Health Checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized 